"""create oauth_states table

Revision ID: f2b58d5dd57c
Revises: 35731cac8b89
Create Date: 2025-04-22 13:21:37.788189

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f2b58d5dd57c'
down_revision: Union[str, None] = '35731cac8b89'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'provider', name='uq_oauth_states_user_provider')
    )
    with op.batch_alter_table('oauth_states', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_oauth_states_id'), ['id'], unique=False)

    with op.batch_alter_table('actions', schema=None) as batch_op:
        batch_op.drop_constraint('actions_node_name_key', type_='unique')
        batch_op.drop_column('is_trigger')

    with op.batch_alter_table('flow_executions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('similarity_metric', sa.String(), server_default='cosine', nullable=False))

    with op.batch_alter_table('nodes', schema=None) as batch_op:
        batch_op.drop_index('idx_nodes_emb_hnsw', postgresql_with={'m': '24', 'ef_construction': '56'}, postgresql_using='hnsw')
        batch_op.drop_column('similarity_metric')

    with op.batch_alter_table('parameters', schema=None) as batch_op:
        batch_op.drop_column('example')
        batch_op.drop_column('field_type')
        batch_op.drop_column('required')
        batch_op.drop_column('is_secret')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('parameters', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_secret', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('required', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('field_type', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('example', sa.TEXT(), autoincrement=False, nullable=True))

    with op.batch_alter_table('nodes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('similarity_metric', sa.VARCHAR(), server_default=sa.text("'cosine'::character varying"), autoincrement=False, nullable=False))
        batch_op.create_index('idx_nodes_emb_hnsw', ['embedding'], unique=False, postgresql_with={'m': '24', 'ef_construction': '56'}, postgresql_using='hnsw')

    with op.batch_alter_table('flow_executions', schema=None) as batch_op:
        batch_op.drop_column('similarity_metric')

    with op.batch_alter_table('actions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_trigger', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.create_unique_constraint('actions_node_name_key', ['node_id', 'name'])

    with op.batch_alter_table('oauth_states', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_oauth_states_id'))

    op.drop_table('oauth_states')
    # ### end Alembic commands ###
