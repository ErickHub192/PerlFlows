"""remove_foreign_key_chat_id_credentials

Revision ID: 94a9624fbb1e
Revises: c3ca93f1f81d
Create Date: 2025-07-26 10:58:56.588922

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '94a9624fbb1e'
down_revision: Union[str, None] = 'c3ca93f1f81d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('action_auth_scopes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action_id', sa.UUID(), nullable=False),
    sa.Column('auth_policy_id', sa.Integer(), nullable=False),
    sa.Column('required_scopes', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['action_id'], ['actions.action_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['auth_policy_id'], ['auth_policies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('action_id', name='uq_action_auth_scopes_action')
    )
    with op.batch_alter_table('action_auth_scopes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_action_auth_scopes_action_id'), ['action_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_action_auth_scopes_auth_policy_id'), ['auth_policy_id'], unique=False)

    op.create_table('telegram_credentials',
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('bot_token', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['ai_agents.agent_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('agent_id')
    )
    with op.batch_alter_table('actions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_actions_auth_policy_id'))
        batch_op.drop_index(batch_op.f('idx_actions_auth_required'))
        batch_op.create_index(batch_op.f('ix_actions_auth_policy_id'), ['auth_policy_id'], unique=False)

    with op.batch_alter_table('auth_policies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_auth_policies_active'))
        batch_op.drop_index(batch_op.f('idx_auth_policies_auth_string'))
        batch_op.drop_index(batch_op.f('idx_auth_policies_service_id'))
        batch_op.drop_constraint(batch_op.f('uq_auth_policies_service_id'), type_='unique')
        batch_op.create_index(batch_op.f('ix_auth_policies_auth_string'), ['auth_string'], unique=False)
        batch_op.create_index(batch_op.f('ix_auth_policies_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_auth_policies_mechanism'), ['mechanism'], unique=False)
        batch_op.create_index(batch_op.f('ix_auth_policies_provider'), ['provider'], unique=False)
        batch_op.create_index(batch_op.f('ix_auth_policies_service'), ['service'], unique=False)
        batch_op.create_index(batch_op.f('ix_auth_policies_service_id'), ['service_id'], unique=True)

    with op.batch_alter_table('credentials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_credentials_service_id'), ['service_id'], unique=False)
        batch_op.drop_constraint(batch_op.f('credentials_chat_id_fkey'), type_='foreignkey')

    with op.batch_alter_table('oauth_states', schema=None) as batch_op:
        batch_op.alter_column('chat_id',
               existing_type=sa.UUID(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('oauth_states', schema=None) as batch_op:
        batch_op.alter_column('chat_id',
               existing_type=sa.UUID(),
               nullable=True)

    with op.batch_alter_table('credentials', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('credentials_chat_id_fkey'), 'chat_sessions', ['chat_id'], ['session_id'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_credentials_service_id'))

    with op.batch_alter_table('auth_policies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_auth_policies_service_id'))
        batch_op.drop_index(batch_op.f('ix_auth_policies_service'))
        batch_op.drop_index(batch_op.f('ix_auth_policies_provider'))
        batch_op.drop_index(batch_op.f('ix_auth_policies_mechanism'))
        batch_op.drop_index(batch_op.f('ix_auth_policies_is_active'))
        batch_op.drop_index(batch_op.f('ix_auth_policies_auth_string'))
        batch_op.create_unique_constraint(batch_op.f('uq_auth_policies_service_id'), ['service_id'], postgresql_nulls_not_distinct=False)
        batch_op.create_index(batch_op.f('idx_auth_policies_service_id'), ['service_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_auth_policies_auth_string'), ['auth_string'], unique=False)
        batch_op.create_index(batch_op.f('idx_auth_policies_active'), ['is_active'], unique=False)

    with op.batch_alter_table('actions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_actions_auth_policy_id'))
        batch_op.create_index(batch_op.f('idx_actions_auth_required'), ['auth_required'], unique=False)
        batch_op.create_index(batch_op.f('idx_actions_auth_policy_id'), ['auth_policy_id'], unique=False)

    op.drop_table('telegram_credentials')
    with op.batch_alter_table('action_auth_scopes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_action_auth_scopes_auth_policy_id'))
        batch_op.drop_index(batch_op.f('ix_action_auth_scopes_action_id'))

    op.drop_table('action_auth_scopes')
    # ### end Alembic commands ###
