"""sync_schema_differences_after_merge

Revision ID: 409efbf5cd71
Revises: 70c8c0ba7c92
Create Date: 2025-06-14 19:17:30.541386

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '409efbf5cd71'
down_revision: Union[str, None] = '70c8c0ba7c92'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('agent_memories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_agent_memories_embedding_ivfflat'), postgresql_with={'lists': '100'}, postgresql_using='ivfflat')

    with op.batch_alter_table('ai_agents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.Enum('queued', 'running', 'paused', 'succeeded', 'failed', name='agentstatus'), server_default='queued', nullable=False))

    with op.batch_alter_table('credentials', schema=None) as batch_op:
        batch_op.alter_column('chat_id',
               existing_type=sa.UUID(),
               nullable=False)

    with op.batch_alter_table('llm_models', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_llm_models_is_active'))
        batch_op.drop_index(batch_op.f('ix_llm_models_is_recommended'))

    with op.batch_alter_table('llm_providers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_llm_providers_is_active'))
        batch_op.drop_constraint(batch_op.f('llm_providers_provider_key_key'), type_='unique')
        batch_op.drop_index(batch_op.f('ix_llm_providers_provider_key'))
        batch_op.create_index(batch_op.f('ix_llm_providers_provider_key'), ['provider_key'], unique=True)

    with op.batch_alter_table('llm_usage_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_usage_model_date'))
        batch_op.drop_index(batch_op.f('ix_usage_provider_date'))
        batch_op.drop_index(batch_op.f('ix_usage_status'))
        batch_op.drop_index(batch_op.f('ix_usage_user_date'))
        batch_op.create_index(batch_op.f('ix_llm_usage_logs_model_id'), ['model_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_llm_usage_logs_provider_id'), ['provider_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_llm_usage_logs_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_llm_usage_logs_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('marketplace_templates', schema=None) as batch_op:
        batch_op.alter_column('category',
               existing_type=postgresql.ENUM('business_sales', 'finance_accounting', 'customer_service', 'marketing_content', 'ecommerce_retail', 'mexico_latam', 'development_devops', name='templatecategory'),
               nullable=False)

    # Create the new usagemode enum and convert the column
    op.execute("""
        CREATE TYPE usagemode AS ENUM ('step', 'tool', 'step_and_tool', 'function');
        ALTER TABLE nodes ALTER COLUMN usage_mode DROP DEFAULT;
        ALTER TABLE nodes ALTER COLUMN usage_mode TYPE usagemode USING usage_mode::text::usagemode;
        ALTER TABLE nodes ALTER COLUMN usage_mode SET DEFAULT 'step'::usagemode;
    """)

    with op.batch_alter_table('refresh_tokens', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_refresh_tokens_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('refresh_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_refresh_tokens_id'))

    with op.batch_alter_table('nodes', schema=None) as batch_op:
        batch_op.alter_column('usage_mode',
               existing_type=sa.Enum('step', 'tool', 'step_and_tool', 'function', name='usagemode'),
               type_=postgresql.ENUM('step', 'tool', 'step_and_tool', 'function', name='nodeusagemode'),
               existing_nullable=False,
               existing_server_default=sa.text("'step'::nodeusagemode"))
    
    # Drop the usagemode enum
    op.execute("DROP TYPE IF EXISTS usagemode")

    with op.batch_alter_table('marketplace_templates', schema=None) as batch_op:
        batch_op.alter_column('category',
               existing_type=postgresql.ENUM('business_sales', 'finance_accounting', 'customer_service', 'marketing_content', 'ecommerce_retail', 'mexico_latam', 'development_devops', name='templatecategory'),
               nullable=True)

    with op.batch_alter_table('llm_usage_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_llm_usage_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_llm_usage_logs_status'))
        batch_op.drop_index(batch_op.f('ix_llm_usage_logs_provider_id'))
        batch_op.drop_index(batch_op.f('ix_llm_usage_logs_model_id'))
        batch_op.create_index(batch_op.f('ix_usage_user_date'), ['user_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_usage_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_usage_provider_date'), ['provider_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_usage_model_date'), ['model_id', 'created_at'], unique=False)

    with op.batch_alter_table('llm_providers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_llm_providers_provider_key'))
        batch_op.create_index(batch_op.f('ix_llm_providers_provider_key'), ['provider_key'], unique=False)
        batch_op.create_unique_constraint(batch_op.f('llm_providers_provider_key_key'), ['provider_key'], postgresql_nulls_not_distinct=False)
        batch_op.create_index(batch_op.f('ix_llm_providers_is_active'), ['is_active'], unique=False)

    with op.batch_alter_table('llm_models', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_llm_models_is_recommended'), ['is_recommended'], unique=False)
        batch_op.create_index(batch_op.f('ix_llm_models_is_active'), ['is_active'], unique=False)

    with op.batch_alter_table('credentials', schema=None) as batch_op:
        batch_op.alter_column('chat_id',
               existing_type=sa.UUID(),
               nullable=True)

    with op.batch_alter_table('ai_agents', schema=None) as batch_op:
        batch_op.drop_column('status')

    with op.batch_alter_table('agent_memories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_agent_memories_embedding_ivfflat'), ['embedding'], unique=False, postgresql_with={'lists': '100'}, postgresql_using='ivfflat')

    # ### end Alembic commands ###
