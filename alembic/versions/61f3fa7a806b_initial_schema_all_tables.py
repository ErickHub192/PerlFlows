"""Initial schema: all tables

Revision ID: 61f3fa7a806b
Revises: fab151c2af82
Create Date: 2025-04-17 12:35:22.190186

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '61f3fa7a806b'
down_revision: Union[str, None] = 'fab151c2af82'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_agents',
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('default_prompt', sa.Text(), nullable=False),
    sa.Column('tools', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('memory_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('agent_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('nodes',
    sa.Column('node_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('node_type', sa.Enum('trigger', 'action', 'transform', 'ai', 'subflow', name='nodetype'), nullable=False),
    sa.Column('default_auth', sa.String(), nullable=True),
    sa.Column('embedding', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.PrimaryKeyConstraint('node_id')
    )
    with op.batch_alter_table('nodes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_nodes_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('actions',
    sa.Column('action_id', sa.UUID(), nullable=False),
    sa.Column('node_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.node_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('action_id')
    )
    with op.batch_alter_table('actions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_actions_name'), ['name'], unique=False)

    op.create_table('credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('client_secret', sa.String(), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('scopes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'provider', name='uq_user_provider')
    )
    with op.batch_alter_table('credentials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_credentials_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credentials_user_id'), ['user_id'], unique=False)

    op.create_table('parameters',
    sa.Column('param_id', sa.UUID(), nullable=False),
    sa.Column('action_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['action_id'], ['actions.action_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('param_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('parameters')
    with op.batch_alter_table('credentials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credentials_user_id'))
        batch_op.drop_index(batch_op.f('ix_credentials_id'))

    op.drop_table('credentials')
    with op.batch_alter_table('actions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_actions_name'))

    op.drop_table('actions')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('nodes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nodes_name'))

    op.drop_table('nodes')
    op.drop_table('ai_agents')
    # ### end Alembic commands ###
