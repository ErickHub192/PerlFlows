name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'Client/my-preact-app/package-lock.json'
          
      - name: Install dependencies
        working-directory: Client/my-preact-app
        run: npm ci
        
      - name: Run ESLint
        working-directory: Client/my-preact-app
        run: npm run lint:check
        
      - name: Run Prettier check
        working-directory: Client/my-preact-app
        run: npm run format:check
        
      - name: Run TypeScript check
        working-directory: Client/my-preact-app
        run: npm run type-check

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'Client/my-preact-app/package-lock.json'
          
      - name: Install dependencies
        working-directory: Client/my-preact-app
        run: npm ci
        
      - name: Run unit tests
        working-directory: Client/my-preact-app
        run: npm run test:coverage
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          directory: Client/my-preact-app/coverage
          flags: frontend
          name: frontend-coverage

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'Client/my-preact-app/package-lock.json'
          
      - name: Install dependencies
        working-directory: Client/my-preact-app
        run: npm ci
        
      - name: Install Playwright browsers
        working-directory: Client/my-preact-app
        run: npx playwright install --with-deps
        
      - name: Build application
        working-directory: Client/my-preact-app
        run: npm run build
        
      - name: Run E2E tests
        working-directory: Client/my-preact-app
        run: npm run test:e2e
        
      - name: Upload E2E test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: Client/my-preact-app/test-results/

  build-and-analyze:
    name: Build and Bundle Analysis
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'Client/my-preact-app/package-lock.json'
          
      - name: Install dependencies
        working-directory: Client/my-preact-app
        run: npm ci
        
      - name: Build application
        working-directory: Client/my-preact-app
        run: npm run build
        
      - name: Analyze bundle size
        working-directory: Client/my-preact-app
        run: npm run analyze
        continue-on-error: true
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: Client/my-preact-app/dist/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'Client/my-preact-app/package-lock.json'
          
      - name: Install dependencies
        working-directory: Client/my-preact-app
        run: npm ci
        
      - name: Run npm audit
        working-directory: Client/my-preact-app
        run: npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: Run security linting
        working-directory: Client/my-preact-app
        run: npm run lint:check
        
      - name: Check for sensitive files
        run: |
          find Client/my-preact-app -name "*.env*" -not -name "*.env.example" -type f | while read file; do
            if [ -f "$file" ]; then
              echo "Warning: Found potential environment file: $file"
              exit 1
            fi
          done

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, e2e-test, build-and-analyze, security-scan]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'Client/my-preact-app/package-lock.json'
          
      - name: Install dependencies
        working-directory: Client/my-preact-app
        run: npm ci
        
      - name: Build for staging
        working-directory: Client/my-preact-app
        run: npm run build
        env:
          VITE_ENVIRONMENT: staging
          VITE_API_BASE_URL: ${{ secrets.STAGING_API_URL }}
          
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add your staging deployment logic here

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, e2e-test, build-and-analyze, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'Client/my-preact-app/package-lock.json'
          
      - name: Install dependencies
        working-directory: Client/my-preact-app
        run: npm ci
        
      - name: Build for production
        working-directory: Client/my-preact-app
        run: npm run build
        env:
          VITE_ENVIRONMENT: production
          VITE_API_BASE_URL: ${{ secrets.PRODUCTION_API_URL }}
          
      - name: Deploy to production
        run: |
          echo "Deploying to production environment..."
          # Add your production deployment logic here
          
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            Automated release created by GitHub Actions
            
            Changes in this release:
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false